import &StandardImport, &CanvasPathBuilder, &@xmldom/xmldom

class SvgPathExtractor extends BaseClass

  constructor: ->
    @_paths = [] new IntermediateCanvasPath

  _advancePath: ->
    @_paths.push path = new IntermediateCanvasPath
    path

  advancePathIfPainted: ->
    if @currentPath.painted
      @_advancePath()
    else
      @currentPath

  @getter
    :paths
    currentPath: -> peek @_paths
    drawArea: ->
      out = rect()
      each path in @paths
        path.drawArea.unionInto out
      out

    inspectedObjects: ->
      SvgPathExtractor: currentPath: @currentPath.inspectedObjects

    canvasPath: ->
      new CanvasPathSet array path in @paths with path.canvasPath

    xbd: ->
      @canvasPath.xbd

  extract: (svg) ->
    &canvg.default.fromString
      new Builder @
      .getContext()
      svg
      {}
        window: null
        ignoreMouse: true       # ignore mouse events
        ignoreAnimation: true   # ignore animations
        ignoreDimensions: true  # does not try to resize canvas
        ignoreClear: true       # does not clear canvas
        DOMParser

    .render()
    .then ->
      each path in @paths
        path.resolveMatrix()
      @
