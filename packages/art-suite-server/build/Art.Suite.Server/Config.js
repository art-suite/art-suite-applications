"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["Configurable", "getEnv", "JSON", "log", "formattedInspect"], [global, require('art-standard-lib'), require('art-config')], (Configurable, getEnv, JSON, log, formattedInspect) => {let Config; return Config = Caf.defClass(class Config extends Configurable {}, function(Config, classSuper, instanceSuper) {let clientArtConfig, e; this.defaults({app: null, metadata: {}, appUrlRegexp: /^\/(\?.*)?$/i, head: null, clientArtConfig: (clientArtConfig = getEnv().clientArtConfig) ? (() => {try {return JSON.parse(clientArtConfig);} catch (error) {e = error; log.error(`Error parsing process.env.clientArtConfig JSON: ${Caf.toString(formattedInspect(clientArtConfig))}`, e); return (() => {throw e;})();};})() : {"Art.Ery.remoteServer": true}}); this.on({configured: function({props: {config}}) {let image, width, height, temp, temp1, base, temp2, base1; return (Caf.exists(temp = Caf.exists(config) && config.metadata) ? image = temp.image : undefined) ? (({width, height} = require('image-size')(require('path').join("./public", image))), ((temp1 = (base = config.metadata).imageWidth) != null ? temp1 : base.imageWidth = width), ((temp2 = (base1 = config.metadata).imageHeight) != null ? temp2 : base1.imageHeight = height)) : undefined;}});});});});
//# sourceMappingURL=Config.js.map
