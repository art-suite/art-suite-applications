import &StandardImport, &PipelineWithRegistry

&ArtConfig.configure()
test "myCustomRequest" ->
  class MyPipeline extends Pipeline
    @publicHandlers myCustomRequest: ({data}) -> result: data.double + data.double

  .myPipeline.myCustomRequest
    session: {}
    data: double: :bar
  .then (response) -> assert.eq response, result: :barbar

test "myCustomRequest with filter" ->
  class MyPipeline extends Pipeline
    @publicHandlers myCustomRequest: ({data}) -> result: data.double + data.double

    @filter before: myCustomRequest: (request) ->
      request.withData double: request.data.double.toUpperCase()

  .myPipeline.myCustomRequest
    session: {}
    data: double: :bar
  .then (response) -> assert.eq response, result: :BARBAR
