"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["ArtModel", "artFluxDeprecatedWarning", "JSON"], [global, require('art-standard-lib'), require('@art-suite/art-models'), require('./Lib')], (ArtModel, artFluxDeprecatedWarning, JSON) => {let localStorage, FluxModel; localStorage = global.localStorage; return FluxModel = Caf.defClass(class FluxModel extends ArtModel {}, function(FluxModel, classSuper, instanceSuper) {this.abstractClass(); this.prototype.modelStoreEntryUpdated = function(entry) {return this.fluxStoreEntryUpdated ? (artFluxDeprecatedWarning("fluxStoreEntryUpdated", "storeEntryUpdated"), this.fluxStoreEntryUpdated(entry)) : undefined;}; this.prototype.modelStoreEntryAdded = function(entry) {return this.fluxStoreEntryAdded ? (artFluxDeprecatedWarning("fluxStoreEntryAdded", "storeEntryAdded"), this.fluxStoreEntryAdded(entry)) : undefined;}; this.prototype.modelStoreEntryRemoved = function(entry) {return this.fluxStoreEntryRemoved ? (artFluxDeprecatedWarning("fluxStoreEntryRemoved", "storeEntryRemoved"), this.fluxStoreEntryRemoved(entry)) : undefined;}; this.prototype.loadModelRecord = function(key) {return this.loadFluxRecord ? (artFluxDeprecatedWarning("loadFluxRecord", "loadModelRecord"), this.loadFluxRecord(key)) : undefined;}; this.prototype.fluxStoreGet = function(key) {artFluxDeprecatedWarning("fluxStoreGet", "getModelRecord"); return this.getModelRecord(key);}; this.prototype.updateFluxStore = function(key, modelRecord) {artFluxDeprecatedWarning("updateFluxStore", "updateModelRecord"); return this.updateModelRecord(key, modelRecord);}; this.prototype._localStoreKey = function(id) {artFluxDeprecatedWarning("_localStoreKey"); return `fluxModel:${Caf.toString(this._name)}:${Caf.toString(id)}`;}; this.prototype._localStoreGet = function(id) {let data; artFluxDeprecatedWarning("_localStoreGet"); return (data = localStorage.getItem(this._localStoreKey(id))) ? JSON.parse(data) : null;}; this.prototype._localStoreSet = function(id, data) {artFluxDeprecatedWarning("_localStoreSet"); return localStorage.setItem(this._localStoreKey(id), JSON.stringify(data));};});});});
//# sourceMappingURL=FluxModel.js.map
