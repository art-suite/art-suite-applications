import &@ArtSuite/ArtModels



##
  TODO 2020-12-31:
    Refactor GlobalEpochCycle: It should be its own Package, and it should provide
    a Class to inherit from that handles registering each Epoch class. e.g.:

      # ArtSuite/ArtModels.ArtModelStore:
      class ArtModelStore extends GlobalEpochCycleClass
        @epochStep :appState

    I think we'll just hard-code a legal ordering:
      :events
      :models
      :idle               -- only invoked if no appState change
      :components
      :presentationState  -- (and even propogation)
      :presentationDraw

if GlobalEpochCycle = Neptune.Art.Engine?.Core?.GlobalEpochCycle
  GlobalEpochCycle.singleton.includeFlux ArtModelStore.singleton

{}
  ModelRegistry:          ArtModelRegistry
  models:                 ArtModelRegistry.models
  _reset:                 _resetArtSuiteModels
  fluxStore =             ArtModelStore.singleton
  FluxStore:              {} fluxStore
  FluxSubscriptionsMixin: ArtModelSubscriptionsMixin
