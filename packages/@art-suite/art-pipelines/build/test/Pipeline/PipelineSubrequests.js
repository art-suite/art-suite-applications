"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["chainedTest", "PipelineRegistry", "Pipeline", "assert", "Promise"], [global, require('../StandardImport')], (chainedTest, PipelineRegistry, Pipeline, assert, Promise) => {return {suite: function() {return chainedTest(() => {let registry, MyPipeline; registry = new PipelineRegistry; return MyPipeline = Caf.defClass(class MyPipeline extends Pipeline {}, function(MyPipeline, classSuper, instanceSuper) {this.registry(registry); this.publicHandlers({get: function({key}) {return `Got ${Caf.toString(key)}?`;}, myChanger: function(request) {return "yay";}, triggerGachedGet: function(request) {let key, promises; ({key} = request); promises = [request.cachedGet("myPipeline", key), request.cachedGet("myPipeline", key), request.cachedGet("myPipeline", `chocolate ${Caf.toString(key)}`)]; assert.eq(promises[0], promises[1]); assert.neq(promises[0], promises[2]); return Promise.all(promises);}});});}).tapTest("triggerCachedGet", ({myPipeline}) => myPipeline.triggerGachedGet({key: "milk", returnResponseObject: true}).then(({data, subrequestCount}) => {assert.eq(subrequestCount, 2); return assert.eq(data, ["Got milk?", "Got milk?", "Got chocolate milk?"]);}));}};});});
//# sourceMappingURL=PipelineSubrequests.js.map
