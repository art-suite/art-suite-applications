"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["describe", "test", "Pipeline", "assert", "Function"], [global, require('../StandardImport'), require('../PipelineWithRegistry')], (describe, test, Pipeline, assert, Function) => {return describe({basics: function() {return test("declare fields", () => {let MyPipeline; MyPipeline = Caf.defClass(class MyPipeline extends Pipeline {}, function(MyPipeline, classSuper, instanceSuper) {this.fields({name: "string", age: "number"}); this.field({address: "string"});}); return assert.eq({name: "string", age: "number", address: "string"}, MyPipeline.getFields());});}, normalize: function() {return test("normalizedFields fields", () => {let myPipeline, MyPipeline; ({myPipeline} = MyPipeline = Caf.defClass(class MyPipeline extends Pipeline {}, function(MyPipeline, classSuper, instanceSuper) {this.fields({name: "string", age: "number"});})); return assert.eq({name: {dataType: "string", fieldType: "string", validate: "function"}, age: {dataType: "number", fieldType: "number", fromString: "function", validate: "function"}}, Caf.object(myPipeline.normalizedFields, (v, k) => {assert.isPlainObject(v); return Caf.object(v, (v2) => (Caf.is(v2, Function)) ? "function" : v2);}));});}});});});
//# sourceMappingURL=PipelineFields.test.js.map
