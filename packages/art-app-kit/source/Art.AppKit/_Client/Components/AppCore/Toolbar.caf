import &StandardImport, &Widgets, &PrivateWidgets

class Toolbar extends ViewStateComponent
  @subscriptions
    :appKitPresentationState.*
    :pageStack.*

  @propFields :hiddenStacks presentationProps: {}
  @getter currentPageStack: -> models.pageStack.currentPageStack

  renderTitle: (lightColor) ->
    showTitle = if @wideLayout && @currentPageStack?.length > 1
      peek @currentPageStack
      .title

    Element
      :row :parentWidthChildrenHeight :childrenCenterLeft
      if @wideLayout && @models.pageStack.showBackButton
        Element
          :childrenSize
          key: :backButton
          animators:
            size: toFrom: hch:1 w:0
            clip: toFrom: true

          IconButton {}
            lightColor
            icon:   :chevronLeft
            action: @models.pageStack.pop

      if !showTitle && &Config.config extract titleComponent
        titleComponent()

      else
        TextElement
          TextStyles.mediumBoldText
          :childrenWidthParentHeight :textCenterCenter
          padding: left: @gridSize / 2
          text:   showTitle ? &Config.config.title
          color:  getButtonTextColor lightColor

  render: ->
    phoneToolbar = @isPhone
    desktopOrTabletToolbar = !phoneToolbar

    if desktopOrTabletToolbar
      if AppPalette extract toolbarColor
        if .9 > toolbarColor.perceptualLightness
          lightColor = true
    else
      toolbarColor = AppPalette.offWhite

    commonProps = {}
      tight:        desktopOrTabletToolbar
      labelBottom:  @isTouchScreen || phoneToolbar
      lightColor:   lightColor

    Element
      draw:
        fill:
          color:  toolbarColor
          shadow: unless desktopOrTabletToolbar
            color:  #0004
            blur:   4
            offset: 0
        padding: [@toolbarLocation]: -@safePadding[@toolbarLocation]

      size: @props.size

      padding:
        if @toolbarHorizontal
              h: @gridSize / 2
        else  v: @gridSize / 2

      if @toolbarHorizontal then :row else :column
      if desktopOrTabletToolbar && @toolbarHorizontal then :childrenCenterLeft

      @renderTitle lightColor if desktopOrTabletToolbar

      array {id, icon, title, hidden} in @stacks
        ToolbarButton
          commonProps
          {}
            hidden:       @hiddenStacks && id in @hiddenStacks
            icon
            text:         title
            selected:     @currentPageStackId == id
            action:       -> @models.pageStack.showStack id

          @presentationProps[id]
          if desktopOrTabletToolbar && @viewSize.x < 768
            text: null
