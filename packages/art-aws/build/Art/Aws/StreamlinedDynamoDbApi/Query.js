"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["Error", "formattedInspect"], [global, require('../StandardImport')], (Error, formattedInspect) => {let Query; return Query = Caf.defClass(class Query extends require('./TableApiBaseClass') {}, function(Query, classSuper, instanceSuper) {this.prototype._translateParams = function(params) {this._translateOptionalParams(params); this._translateWhere(params); return this._target;}; this.prototype._translateLimit = function(params) {return (params.limit != null) ? this._target.Limit = params.limit : undefined;}; this.prototype._translateExclusiveStartKey = function(params) {return params.exclusiveStartKey ? this._target.ExclusiveStartKey = params.exclusiveStartKey : undefined;}; this.prototype._translateDescending = function(params) {return params.descending ? this._target.ScanIndexForward = false : undefined;}; this.prototype._translateWhere = function(params) {let where, expr; ({where} = params); if (!(where != null)) {throw new Error("where param required");}; if (expr = this._translateConditionExpression(where)) {this._target.KeyConditionExpression = expr;} else {if (!(where != null)) {throw new Error(`non-empty where param required: where: ${Caf.toString(formattedInspect(where))}`);};}; return this._target;}; this.prototype._translateFilterExpression = function(params) {let filterExpression, expr; ({filterExpression} = params); if (!filterExpression) {return;}; if (expr = this._translateConditionExpression(filterExpression)) {this._target.FilterExpression = expr;}; return this._target;}; this.prototype._translateOptionalParams = function(params) {this._translateIndexName(params); this._translateLimit(params); this._translateConsistentRead(params); this._translateConsumedCapacity(params); this._translateDescending(params); this._translateExclusiveStartKey(params); this._translateSelect(params); return this._target;};});});});
//# sourceMappingURL=Query.js.map
