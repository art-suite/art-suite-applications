// Generated by CoffeeScript 1.12.7
(function() {
  var BaseClass, Config, Promise, Sqs, each, merge, normalizeQueueUrl, ref, ref1, sqsCommands,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ref = require('art-standard-lib'), merge = ref.merge, Promise = ref.Promise, each = ref.each;

  BaseClass = require('art-class-system').BaseClass;

  ref1 = require('./StreamlinedSqsApi'), sqsCommands = ref1.sqsCommands, normalizeQueueUrl = ref1.normalizeQueueUrl;

  Config = require("./Config");

  module.exports = Sqs = (function(superClass) {
    var emptyObject, identifyFunction;

    extend(Sqs, superClass);

    Sqs.singletonClass();


    /*
    Option defaults are read out of Art.Aws.config.sqs, but can be overridden here:
    options:
       * direct url to the queue
      queueUrl:
        Example: https://sqs.us-east-1.amazonaws.com/465118458885/ZoMigrationDev
    
      queueUrlPrefix: null
        Example: https://sqs.us-east-1.amazonaws.com/123456789
    
       * joined with queueUrlPrefix
      queue: null
        Example: "ZoMigrationDev"
    
      accessKeyId:
      secretAccessKey:
     */

    function Sqs(options) {
      if (options == null) {
        options = {};
      }
      this._awsSqs = new AWS.SQS(merge(this.sqsConfig = Config.getNormalizedConfig("sqs", options)));
    }

    Sqs.getter({
      queueUrl: function() {
        return normalizeQueueUrl(null, this.sqsConfig);
      }
    });

    emptyObject = {};

    identifyFunction = function(a) {
      return a;
    };

    each(sqsCommands, function(arg, command) {
      var postprocess, preprocess, ref2, ref3;
      preprocess = (ref2 = arg.preprocess) != null ? ref2 : identifyFunction, postprocess = (ref3 = arg.postprocess) != null ? ref3 : identifyFunction;
      return Sqs.prototype[command] = function(params) {
        return Promise.withCallback((function(_this) {
          return function(callback) {
            return _this._awsSqs[command](preprocess(params != null ? params : emptyObject, _this.sqsConfig), function(err, data) {
              return callback(err, postprocess(data != null ? data : emptyObject));
            });
          };
        })(this));
      };
    });

    return Sqs;

  })(BaseClass);

}).call(this);

//# sourceMappingURL=Sqs.js.map
