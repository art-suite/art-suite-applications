import &StandardImport, {} &Config, &ArtEry
Config extract config, verboseLog

## encodePusherChannelName
  SEE Pusher legal channel names: https://pusher.com/docs/client_api_guide/client_channels
  I think this matches legal channel names: /^[-a-zA-Z0-9_=@,.;]+$/
  OUT: any character that is illegal OR "." is replaced with ";"
encodePusherChannelName = (key) -> key?.replace /[^-a-zA-Z0-9_=@,;]/g, ";"

{}
  verboseLog

  ## getPusherChannel
    IN:
      pipelineName: string
      queryName: string (optional)
      key: string or plain object
        if plain object, must provide a pipeline that implements toKeyString
  getPusherChannel = (pipelineName, queryName, key) ->
    encodePusherChannelName
      compact []
        encodePusherChannelName pipelineName
        encodePusherChannelName queryName
        encodePusherChannelName key
      .join '.'

  subscribeToPusherChangeEvents: (pipelineName, queryName, key, handler) ->
    if Config extract pusherClient

      channelName = getPusherChannel pipelineName, queryName, key
      eventName = config.pusherEventName

      verboseLog subscribe: {} channelName

      channel = pusherClient.subscribe channelName
      channel.bind eventName, handler

      unsubscribe: ->
        verboseLog unsubscribe: {} channelName
        channel.unbind eventName, handler
        pusherClient.unsubscribe channelName

  ## sendPusherChangedEvent
    IN: pipelineName: pipeline-name string or pipeline
    OUT: boolean: pusher event-send actually attempted?
  sendPusherChangedEvent: (pipelineName, queryName, key, payload) ->
    config extract pusherEventName

    channel = getPusherChannel pipelineName, queryName,key

    if Config.pusherServer?
      verboseLog sendPusherChangedEvent-sending: {} request = {} channel, pusherEventName, pipelineName, key, payload
      Config.pusherServer.trigger channel, pusherEventName, payload || {}
      .then (response) ->
        if response.status != 200
          verboseLog sendPusherChangedEvent-unspectedResponse: {} request, response

      .catch (error) -> log.error art-ery-pusher-sendPusherChangedEvent-error: {} request, error
      true

    else
      verboseLog sendPusherChangedEvent-pretend-sending: {}
        info: "" PusherServer not set. #{}
          if isBrowser then "" Cannot send events FROM the browser. ArtEryServer required.
          else "" Cannot send event.
        channel
        pusherEventName
        pipelineName
        key
        payload

      false