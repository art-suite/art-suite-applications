"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["Configurable", "isString", "ArtEry", "console", "log", "Promise"], [global, require('./StandardImport'), {ArtEry: require('art-ery')}], (Configurable, isString, ArtEry, console, log, Promise) => {let Config; return Config = Caf.defClass(class Config extends Configurable {}, function(Config, classSuper, instanceSuper) {let encodeKeyString; this.defaults({appId: "...", key: "...", secret: "...", cluster: null, encrypted: true, verbose: false, verifyConnection: false, pusherEventName: "changed"}); encodeKeyString = function(key) {return key.replace(/[^-a-zA-Z0-9_=@,;]/g, ";");}; this.getPusherChannel = function(pipeline, key) {if (!isString(key)) {key = pipeline.toKeyString(key);}; if (!isString(pipeline)) {pipeline = pipeline.getName();}; return ([ArtEry.config.tableNamePrefix, pipeline, encodeKeyString(key)]).join(".");}; this.configured = function() {let verbose, verifyConnection, key, encrypted, cluster, pusher, temp; classSuper.configured.apply(this, arguments); temp = this.config; verbose = temp.verbose; verifyConnection = temp.verifyConnection; key = temp.key; encrypted = temp.encrypted; cluster = temp.cluster; return this.PusherClient ? (pusher = this.pusherClient = new this.PusherClient(key, {encrypted, cluster}), this.verboseLog("ArtEryPusher: PusherClient initialized"), verifyConnection ? (this.verboseLog("PusherClient - subscribing to connection state_change"), this.pusherClient.connection.bind("state_change", (data) => this.verboseLog(`PusherClient state_change: ${Caf.toString(data)}`))) : undefined) : this.PusherServer ? (this.pusherServer = new this.PusherServer(this.config), this.verboseLog("PusherServer initialized"), verifyConnection && this.pusherServer.trigger("ArtEryPusherConfig", "server", {message: "ArtEryPusher: verifyConnection: pusher was initialized correctly"}, (error, request, response) => error ? (this.verboseLog(`PusherServer not initialized correctly! trigger-attempt error: ${Caf.toString(error)}`), console.log(error)) : this.verboseLog("PusherServer initialized correctly."))) : this.verboseLog("disabled. Require: art-ery-pusher/Client or art-ery-pusher/Server");}; this.verboseLog = function(a) {return this.config.verbose && log(`ArtEryPusher: ${Caf.toString(a)}`);}; this.onConnected = function() {return new Promise((_resolve, reject) => this.pusherClient ? (log(`onConnected current state: ${Caf.toString(this.pusherClient.connection.state)}`), (this.pusherClient.connection.state === "connected") ? _resolve() : this.pusherClient.connection.bind("state_change", ({current}) => {log(`onConnected updated state: ${Caf.toString(current)}`); return (current === "connected") ? _resolve() : undefined;})) : reject("no pusherClient"));};});});});
//# sourceMappingURL=Config.js.map
