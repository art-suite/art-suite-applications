import &StandardImport, {} &Request

(superClass) -> class PipelineRemoteCoreMixin extends superClass
  @abstractClass()

  @getter
    apiReport: (options) ->
      options extract? server, publicOnly
      object type from @requestTypes when !publicOnly || @getPublicRequestTypes()[type]
        {method, url} = Request.getRestClientParamsForArtEryRequest
          server:   @remoteServer || server
          type:     type
          restPath: @restPath
        "#{method.toLocaleUpperCase()}": url

    isRemoteClient:   -> !!@remoteServer
    apiRoot:          -> @class._apiRoot || config._apiRoot
    remoteServer:     -> @class._remoteServer || config.remoteServer

    location: ->
      if @remoteServer && config.location != :server
            :client
      else  config.location
