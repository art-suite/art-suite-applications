import &StandardImport, &PipelineRegistry, &Config

[]
  &Filters
  &DatabaseFilters
  {}
    config
    pipelineRegistry
    pipelineRegistry.pipelines
    pipelineRegistry.session
    &PrefetchedRecordsCache.prefetchedRecordsCache

    sendInitializeRequestToAllPipelines: (registry = pipelineRegistry)->
      Promise.all array pipeline in registry.pipelines when
          pipeline.class.getHandlers().initialize
        pipeline.initialize originatedOnServer: true

    initForTesting: ->
      &ArtEry
      Promise
      .then ->
        unless &ArtEry.config.remoteServer
          &ArtEry.sendInitializeRequestToAllPipelines()

    getArtEryRemoteServer: -> config.remoteServer

    # for testing - soon to be DEPRECATED once testing uses its own, local pipelineRegistries
    _reset: (pipelineTestFunction)->
      pipelineRegistry._reset pipelineTestFunction
      &Filters._resetFilters()
