import &StandardImport, &Config, &Globals, {} &@ArtSuite/DatabaseFilters

class Pipeline extends &@ArtSuite/ArtPipelines.Pipeline
  @abstractClass() # any sub-class that shouldn't auto-register should be an abstract class
  @registry pipelineRegistry

  @filter RestTransportClientFilter

  @remoteServer: (@_remoteServer) ->

  constructor: ->
    if @remoteServer
      if @restTransportClientConfig extract remoteServer && @remoteServer != remoteServer
        throw new Error
          "" Only one remoteServer can be configured per pipelineRegistry: #{} formattedInspect []
            remoteServer
            @remoteServer

      @restTransportClientConfig.remoteServer = @remoteServer

  @getter
    restTransportClientConfig:  -> getRestTransportClientConfig @pipelineRegistry
    remoteServer:               -> @class._remoteServer ? config.remoteServer

  #####################################
    ###################################

      Database / RecordPipeline Extensions

    ###################################
    ###################################

    Big question, do these count as RecordPipeline extensions?

      @queries
      @fields

  @addDatabaseFilters: (options) ->
    @filter DatabaseFilters.createDatabaseFilters options, @

  @addDatabaseFiltersV2: (options) ->
    @filter DatabaseFilters.createDatabaseFilters
      merge
        linkFilterVersion: 2
        options

      @

  @tableNamePrefix:     (@_tableNamePrefix) -> # override default (see config.tableNamePrefix)
  getPrefixedTableName: (tableName) -> "#{@tableNamePrefix}#{tableName}"

  @getter
    tableNamePrefix:        -> @class._tableNamePrefix ? config.tableNamePrefix
    tableName:              -> @getPrefixedTableName @name
