"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["Filter", "getPrefetchedRecord", "addPrefetchedRecords"], [global, require('../StandardImport'), require('./PrefetchedRecordsCache')], (Filter, getPrefetchedRecord, addPrefetchedRecords) => {let PrefetchedRecordsFilter; return PrefetchedRecordsFilter = Caf.defClass(class PrefetchedRecordsFilter extends Filter {constructor(options) {let temp; super(...arguments); this.expirationSeconds = ((temp = Caf.exists(options) && options.expirationSeconds) != null ? temp : 1);};}, function(PrefetchedRecordsFilter, classSuper, instanceSuper) {this.location("client"); this.before({get: function(request) {let temp; return ((temp = !request.props.noCache ? getPrefetchedRecord(request.pipeline, request.key) : undefined) != null ? temp : request);}}); this.after({all: function(response) {let dataUpdates; if (dataUpdates = response.props.dataUpdates) {addPrefetchedRecords(response.pipeline, dataUpdates, this.expirationSeconds);}; return response;}});});});});
//# sourceMappingURL=PrefetchedRecordsFilter.js.map
