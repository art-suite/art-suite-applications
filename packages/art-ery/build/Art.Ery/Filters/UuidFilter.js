// Generated by CoffeeScript 1.12.7
(function() {
  var FieldTypes, Filter, Uuid, UuidFilter, defineModule, log, ref,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ref = require('art-standard-lib'), defineModule = ref.defineModule, log = ref.log;

  Filter = require('../Filter');

  Uuid = require('uuid');

  FieldTypes = require('art-validation').FieldTypes;

  defineModule(module, UuidFilter = (function(superClass) {
    extend(UuidFilter, superClass);

    function UuidFilter() {
      UuidFilter.__super__.constructor.apply(this, arguments);
      log.warn("DEPRICATED: UuidFilter. USE: UniqueIdFilter");
    }

    UuidFilter.alwaysForceNewIds = true;

    UuidFilter.before({
      create: function(request) {
        return request.withMergedData({
          id: UuidFilter.alwaysForceNewIds ? Uuid.v4() : request.data.id || Uuid.v4()
        });
      }
    });

    UuidFilter.fields({
      id: FieldTypes.id
    });

    return UuidFilter;

  })(Filter));

}).call(this);

//# sourceMappingURL=UuidFilter.js.map
