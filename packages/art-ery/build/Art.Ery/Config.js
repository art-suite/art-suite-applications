// Generated by CoffeeScript 1.12.7
(function() {
  var Config, Configurable, Validator, defineModule, mergeInto, ref, w,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ref = require('art-standard-lib'), w = ref.w, defineModule = ref.defineModule, mergeInto = ref.mergeInto;

  Validator = require('art-validation').Validator;

  Configurable = require('art-config').Configurable;

  defineModule(module, Config = (function(superClass) {
    extend(Config, superClass);

    function Config() {
      return Config.__super__.constructor.apply(this, arguments);
    }

    Config.defaults({
      tableNamePrefix: "",
      location: "both",
      saveSessions: true,
      apiRoot: "api",

      /*
      remoteServer examples:
        "http://localhost:8085"
        "http://domain.com"
        "https://domain.com"
        "//domain.com"  # this ensures the request stays HTTP or HTTPS based on the original html request
        true
      
      If remoteServer is true
        requests will still go to the remote server
        The remote URL, though, will just be "#{apiRoot}/..."
      
        This is a good setting for apps loaded from an HTML page on the same
        server as the remote-API.
       */
      remoteServer: null,
      verbose: false,
      returnProcessingInfoToClient: false,

      /*
        generating a secury HMAC privateSessionKey:
      
        in short, run: openssl rand -base64 16
      
        http://security.stackexchange.com/questions/95972/what-are-requirements-for-hmac-secret-key
        Recommends 128bit string generated with a "cryptographically
        secure pseudo random number generator (CSPRNG)."
      
        http://osxdaily.com/2011/05/10/generate-random-passwords-command-line/
         * 128 bits:
        > openssl rand -base64 16
      
         * 256 bits:
        > openssl rand -base64 32
       */
      server: {
        privateSessionKey: "todo+generate+your+one+unique+key"
      }
    });

    Config.getPrefixedTableName = function(tableName) {
      return "" + Config.config.tableNamePrefix + tableName;
    };

    return Config;

  })(Configurable));

}).call(this);

//# sourceMappingURL=Config.js.map
