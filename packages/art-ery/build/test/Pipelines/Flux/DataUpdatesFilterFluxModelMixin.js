// Generated by CoffeeScript 1.12.7
(function() {
  var defineModule, getFluxLog, log, ref,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ref = require('art-standard-lib'), log = ref.log, defineModule = ref.defineModule;

  getFluxLog = require('./FluxLog').getFluxLog;

  defineModule(module, function() {
    return function(superClass) {
      var DataUpdatesFilterFluxModelMixin;
      return DataUpdatesFilterFluxModelMixin = (function(superClass1) {
        extend(DataUpdatesFilterFluxModelMixin, superClass1);

        function DataUpdatesFilterFluxModelMixin() {
          return DataUpdatesFilterFluxModelMixin.__super__.constructor.apply(this, arguments);
        }

        DataUpdatesFilterFluxModelMixin.prototype.dataUpdated = function(key, data) {
          getFluxLog().push({
            dataUpdated: {
              model: this.name,
              key: key,
              data: data
            }
          });
          return DataUpdatesFilterFluxModelMixin.__super__.dataUpdated.apply(this, arguments);
        };

        DataUpdatesFilterFluxModelMixin.prototype.dataDeleted = function(key, data) {
          getFluxLog().push({
            dataDeleted: {
              model: this.name,
              key: key,
              data: data
            }
          });
          return DataUpdatesFilterFluxModelMixin.__super__.dataDeleted.apply(this, arguments);
        };

        return DataUpdatesFilterFluxModelMixin;

      })(superClass);
    };
  });

}).call(this);

//# sourceMappingURL=DataUpdatesFilterFluxModelMixin.js.map
