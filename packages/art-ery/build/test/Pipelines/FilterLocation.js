"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["Pipeline", "arrayWith"], [global, require('./StandardImport')], (Pipeline, arrayWith) => {let FilterLocation; return FilterLocation = Caf.defClass(class FilterLocation extends Pipeline {}, function(FilterLocation, classSuper, instanceSuper) {let requestWithLog; this.remoteServer("http://localhost:8085"); requestWithLog = function(request, name) {let base; return request.withData({customLog: arrayWith(Caf.exists(base = request.data) && base.customLog, `${Caf.toString(name)}@${Caf.toString(request.location)}`)});}; this.filter({location: "client", name: "clientFilter", before: {filterTest: function(request) {return requestWithLog(request, this.name);}}, after: {filterTest: function(request) {return requestWithLog(request, this.name);}}}); this.filter({location: "both", name: "bothFilter", before: {filterTest: function(request) {return requestWithLog(request, this.name);}}, after: {filterTest: function(request) {return requestWithLog(request, this.name);}}}); this.filter({location: "server", name: "serverFilter", before: {filterTest: function(request) {return requestWithLog(request, this.name);}}, after: {filterTest: function(request) {return requestWithLog(request, this.name);}}}); this.publicRequestTypes("filterTest"); this.handlers({filterTest: function(request) {let base; return request.success({data: {customLog: arrayWith(Caf.exists(base = request.data) && base.customLog, `[handler@${Caf.toString(request.location)}]`)}});}});});});});
//# sourceMappingURL=FilterLocation.js.map
