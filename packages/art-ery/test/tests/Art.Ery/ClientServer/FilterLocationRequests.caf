import &StandardImport

suite: ->
  savedRemoteServer = null
  global.setup ->
    savedRemoteServer = pipelines.filterLocation.remoteServer

  global.teardown ->
    pipelines.filterLocation.class.remoteServer savedRemoteServer

  test "client location", ->
    assert.eq pipelines.filterLocation.location, :client
    pipelines.filterLocation.filterTest returnResponseObject: true
    .then (response) ->
      assert.eq response.data.fromRemoteRequest, [] false false true true
      assert.eq response.data.customLog, []
        "clientFilter@client"
        "bothFilter@client"
        "serverFilter@server"
        "bothFilter@server"
        "[handler@server]"
        "bothFilter@server"
        "serverFilter@server"
        "bothFilter@client"
        "clientFilter@client"

      assert.selectedEq
        name: "POST http://localhost:8085/api/filterLocation-filterTest"
        context: :remoteRequest
        response.handledBy

  test "both location", ->
    {location} = config
    pipelines.filterLocation.class.remoteServer null
    assert.eq pipelines.filterLocation.location, :both
    pipelines.filterLocation.filterTest returnResponseObject: true
    .then (response) ->
      config.location = location
      assert.eq response.data.fromRemoteRequest, [] false false false false

      assert.eq response.data.customLog, []
        "clientFilter@both"
        "bothFilter@both"
        "serverFilter@both"
        "bothFilter@both"
        "[handler@both]"
        "bothFilter@both"
        "serverFilter@both"
        "bothFilter@both"
        "clientFilter@both"

      assert.selectedEq
        name: :filterTest-handler context: :handler
        response.handledBy
