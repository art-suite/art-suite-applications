import &StandardImport

isPresentString = (s) -> isString(s) && present s

class FilterLocation extends Pipeline

  @remoteServer :http://localhost:8085

  requestWithLog = (request, name) ->
    request.withData
      customLog: arrayWith request.data?.customLog, "" #{name}@#{request.location}
      fromRemoteRequest: arrayWith request.data?.fromRemoteRequest, !!request.remoteRequest

  @filter
    location: :client
    name:     :clientFilter
    before:   filterTest: (request) -> requestWithLog request, @name
    after:    filterTest: (request) -> requestWithLog request, @name

  @filter
    location: :both
    name:     :bothFilter
    before:   filterTest: (request) -> requestWithLog request, @name
    after:    filterTest: (request) -> requestWithLog request, @name

  @filter
    location: :server
    name:     :serverFilter
    before:   filterTest: (request) -> requestWithLog request, @name
    after:    filterTest: (request) -> requestWithLog request, @name

  @publicRequestTypes :filterTest

  @handlers
    filterTest: (request) ->
      request.success data: customLog: arrayWith request.data?.customLog, "" [handler@#{request.location}]
