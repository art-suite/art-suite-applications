"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["describe", "test", "Component", "assert", "TestElement"], [global, require('../StandardImport')], (describe, test, Component, assert, TestElement) => {return describe({basic: function() {test("inspectedName", () => {let MyComponent, instance; MyComponent = Caf.defClass(class MyComponent extends Component {}, function(MyComponent, classSuper, instanceSuper) {this.prototype.render = function() {return TestElement({key: "normalWrapper"});};}); instance = MyComponent({foo: 123}); return assert.isString(instance.inspectedName);}); return test("inspectedPath", () => {let MyComponent, instance; MyComponent = Caf.defClass(class MyComponent extends Component {}, function(MyComponent, classSuper, instanceSuper) {this.prototype.render = function() {return TestElement({key: "normalWrapper"});};}); instance = MyComponent({foo: 123}); return assert.isString(instance.inspectedPath);});}, subcomponents: function() {test("none", () => {let MyComponent, instance; MyComponent = Caf.defClass(class MyComponent extends Component {}, function(MyComponent, classSuper, instanceSuper) {this.prototype.render = function() {return TestElement({key: "normalWrapper"});};}); instance = MyComponent({foo: 123}); return assert.eq(instance.subcomponents, []);}); test("two", () => {let MySubcomponent, MyComponent, instance; MySubcomponent = Caf.defClass(class MySubcomponent extends Component {}, function(MySubcomponent, classSuper, instanceSuper) {this.prototype.render = function() {return TestElement({key: "normalWrapper"});};}); MyComponent = Caf.defClass(class MyComponent extends Component {}, function(MyComponent, classSuper, instanceSuper) {this.prototype.render = function() {return TestElement(MySubcomponent(), MySubcomponent());};}); instance = MyComponent()._instantiate(); return assert.eq(instance.subcomponents.length, 2);}); return test("don't recurse into wrapper-components", () => {let MySubcomponent, WrapperComponent, MyComponent, instance; MySubcomponent = Caf.defClass(class MySubcomponent extends Component {}, function(MySubcomponent, classSuper, instanceSuper) {this.prototype.render = function() {return TestElement({key: "normalWrapper"});};}); WrapperComponent = Caf.defClass(class WrapperComponent extends Component {}, function(WrapperComponent, classSuper, instanceSuper) {this.prototype.render = function() {return TestElement(this.props.children);};}); MyComponent = Caf.defClass(class MyComponent extends Component {}, function(MyComponent, classSuper, instanceSuper) {this.prototype.render = function() {return TestElement(MySubcomponent(), WrapperComponent(MySubcomponent(), MySubcomponent()));};}); instance = MyComponent()._instantiate(); return assert.eq(instance.subcomponents.length, 2);});}});});});
//# sourceMappingURL=Inspection.test.js.map
