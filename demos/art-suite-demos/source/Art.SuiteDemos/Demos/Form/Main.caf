import &ArtSuite

StyleProps =
  standardSpacing: 10
  mediumText:
    fontFamily: :sans-serif
    fontSize:   16
    color:      #0009

class Button extends PointerActionsMixin Component
  render: ->
    {text, disabled} = @props
    enabled = !disabled

    Element
      size: :parentWidthChildrenHeight
      cursor: if enabled then "pointer" else null
      margin: StyleProps.standardSpacing
      opacity: if enabled then 1 else .5
      on: if enabled then @buttonHandlers else {}
      childrenLayout: :column
      childrenAlignment: :centerCenter
      animators: :draw

      draw:
        color: if @pointerDown then #0004 else if @hover then #0002 else #0001
        radius: 3

      TextElement
        StyleProps.mediumText
        size:     :parentWidthChildrenHeight
        padding:  StyleProps.standardSpacing
        align:    :center
        text:     text

class Main extends Component

  defaultValue = :orange
  @stateFields
    errorInfo: null
    currentValue:     defaultValue
    backgroundColor:  defaultValue
    offset: point0

  showParseError: (c) ->
    @errorInfo = "" invalid color: #{c}
    timeout 1000, -> @errorInfo = null

  setColorFromString: (colorString) ->
    c = rgbColor colorString
    if c.parseError
      @showParseError colorString
    else
      @backgroundColor = c

  resetColor: ->
    @setColorFromString @currentValue = defaultValue

  render: ->
    Element
      draw: "grey"
      padding: 20

      Element
        draw: "#aaa"
        clip: true

        Element
          size: w: 300 hch: 1
          location:
            ps: .5
            plus: @offset
          axis:     :centerCenter
          childrenLayout: :column

          draw:
            radius: 5
            color:  :white
            shadow:
              offsetY: 5
              blur: 5
              color: #0007

          Element
            size: :parentWidthChildrenHeight
            draw: #0001
            cursor: "move"
            on: pointerMove: ({delta}) =>
              @offset = @offset.add delta

            TextElement
              StyleProps.mediumText
              size:     :parentWidthChildrenHeight
              padding:  StyleProps.standardSpacing
              align:    :centerCenter
              text:     "" Color Preview Form Demo

          Element
            padding: StyleProps.standardSpacing
            size: hch: 1
            childrenLayout: :column
            childrenMargins: StyleProps.standardSpacing

            TextElement
              StyleProps.mediumText
              size: cs: 1
              margin: StyleProps.standardSpacing
              text: "Instructions:\n  Type in an HTML color\n  Press Enter"

            Element
              size: ww: 1, h: 30
              draw:
                color: @backgroundColor
                shadow: offsetY: 5 blur: 5 color: #0007
              animators: :draw

              Element
                clip: true

                TextElement
                  StyleProps.mediumText
                  size: :childrenSize
                  axis: .5
                  location: ps: .5
                  text: @backgroundColor.toString()
                  color:
                    if @backgroundColor.perceptualLightness >= .8
                      #0008
                    else
                      #fffd

            Element
              margin: StyleProps.standardSpacing
              size: ww:1, h:40

              if @errorInfo?
                TextElement
                  StyleProps.mediumText
                  text: @errorInfo
                  location: ps: .5
                  color: "red"
                  axis: point .5

              else
                TextInputElement
                  StyleProps.mediumText
                  fontSize: 24
                  placeholder: "type in color"
                  size: ww:1, hh:1
                  value: @currentValue
                  align: "center"
                  on:
                    enter: (e) -> @setColorFromString e.target.value
                    valueChanged: (e) -> @currentValue = e.props.value
                    domElementAttached: ({target}) ->
                      target.focus()
                      target.selectAll()
                  RectangleElement color: rgbColor #0001

            Element
              size: :parentWidthChildrenHeight
              childrenLayout: :row

              Button
                size: :parentWidthChildrenHeight
                disabled: @currentValue.length == 0 || rgbColor(@currentValue).eq @backgroundColor
                action: -> @setColorFromString @currentValue
                text: :submit

              Button
                size: :parentWidthChildrenHeight
                disabled: rgbColor(:orange).eq @backgroundColor
                action: @resetColor
                text: :reset
